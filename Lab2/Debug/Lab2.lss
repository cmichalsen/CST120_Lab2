
Lab2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000011a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000c6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000011a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000014c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000018c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007aa  00000000  00000000  000001ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068a  00000000  00000000  00000956  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a9  00000000  00000000  00000fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000128c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000384  00000000  00000000  000012b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  00001634  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000170c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 61 00 	jmp	0xc2	; 0xc2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
			//PORTB = 0b00000000;	// ALL OFF
			//_delay_ms(500);			
		//}
		
	// PART test
	DDRB = 0b00011000;	//	SETS BITS 4,5 TO OUPUT
  80:	88 e1       	ldi	r24, 0x18	; 24
  82:	84 b9       	out	0x04, r24	; 4
	
	while(1)
	{
		PORTB = 0b00011000;	//	SETS BITS 4,5 TO HIGH
  84:	98 e1       	ldi	r25, 0x18	; 24
		_delay_ms(5);
		PORTB = 0b00000000;	// ALL OFF
		_delay_ms(5);
		PORTB = 0b00010000;	//	SET BIT 4 TO HIGH
  86:	80 e1       	ldi	r24, 0x10	; 16
	// PART test
	DDRB = 0b00011000;	//	SETS BITS 4,5 TO OUPUT
	
	while(1)
	{
		PORTB = 0b00011000;	//	SETS BITS 4,5 TO HIGH
  88:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8a:	ef e1       	ldi	r30, 0x1F	; 31
  8c:	fe e4       	ldi	r31, 0x4E	; 78
  8e:	31 97       	sbiw	r30, 0x01	; 1
  90:	f1 f7       	brne	.-4      	; 0x8e <main+0xe>
  92:	00 c0       	rjmp	.+0      	; 0x94 <main+0x14>
  94:	00 00       	nop
		_delay_ms(5);
		PORTB = 0b00000000;	// ALL OFF
  96:	15 b8       	out	0x05, r1	; 5
  98:	ef e1       	ldi	r30, 0x1F	; 31
  9a:	fe e4       	ldi	r31, 0x4E	; 78
  9c:	31 97       	sbiw	r30, 0x01	; 1
  9e:	f1 f7       	brne	.-4      	; 0x9c <main+0x1c>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <main+0x22>
  a2:	00 00       	nop
		_delay_ms(5);
		PORTB = 0b00010000;	//	SET BIT 4 TO HIGH
  a4:	85 b9       	out	0x05, r24	; 5
  a6:	ef e1       	ldi	r30, 0x1F	; 31
  a8:	fe e4       	ldi	r31, 0x4E	; 78
  aa:	31 97       	sbiw	r30, 0x01	; 1
  ac:	f1 f7       	brne	.-4      	; 0xaa <main+0x2a>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <main+0x30>
  b0:	00 00       	nop
		_delay_ms(5);
		PORTB = 0b00000000;	// ALL OFF
  b2:	15 b8       	out	0x05, r1	; 5
  b4:	ef e1       	ldi	r30, 0x1F	; 31
  b6:	fe e4       	ldi	r31, 0x4E	; 78
  b8:	31 97       	sbiw	r30, 0x01	; 1
  ba:	f1 f7       	brne	.-4      	; 0xb8 <main+0x38>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <main+0x3e>
  be:	00 00       	nop
  c0:	e3 cf       	rjmp	.-58     	; 0x88 <main+0x8>

000000c2 <_exit>:
  c2:	f8 94       	cli

000000c4 <__stop_program>:
  c4:	ff cf       	rjmp	.-2      	; 0xc4 <__stop_program>
